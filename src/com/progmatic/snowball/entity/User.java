package com.progmatic.snowball.entity;
// Generated 19.05.2015 13:37:53 by Hibernate Tools 3.4.0.CR1


import java.util.HashSet;
import java.util.Set;

/**
 * User generated by hbm2java
 */
//@Entity
//@Table(name="user", schema="public")
//@SequenceGenerator(name="user_id_seq", sequenceName="user_id_seq", allocationSize=1)
//@Restrict
public class User  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long id;
     private String login;
     private String password;
     private Set<Role> roles = new HashSet<Role>(0);
     private Set<UserPoint> userPoints  = new HashSet<UserPoint>(0);
     private Set<SkiArea> skiAreas = new HashSet<SkiArea>(0);

    public User() {
    }

	
    public User(long id) {
        this.id = id;
    }
    public User(long id, String login, String password, Set<Role> roles, Set<SkiArea> skiAreas) {
       this.id = id;
       this.login = login;
       this.password = password;
       this.roles = roles;
       this.skiAreas = skiAreas;
    }
   
    //@Id 
    //@Column(name="id", unique=true, nullable=false)
 	//@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="user_id_seq")
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }

    
    //@Column(name="login", unique = true, nullable = false, length=40)
    //@Size(max=40)
	//@NotNull
    public String getLogin() {
        return this.login;
    }
    
    public void setLogin(String login) {
        this.login = login;
    }

    
    //@Column(name="password", nullable = false, length=45)
    //@Size(max=45)
	//@NotNull
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    //@ManyToMany(fetch=FetchType.LAZY)
    //@JoinTable(name="user_role", schema="public", joinColumns = { 
    //    @JoinColumn(name="user_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
    //    @JoinColumn(name="role_id", nullable=false, updatable=false) })
    public Set<Role> getRoles() {
        return this.roles;
    }
    
    public void setRoles(Set<Role> roles) {
        this.roles = roles;
    }


	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserPoint> getUserPoints() {
		return this.userPoints;
	}

	public void setUserPoints(Set<UserPoint> userPoints) {
		this.userPoints = userPoints;
	}

    //@ManyToMany(fetch=FetchType.LAZY)
    //@JoinTable(name="ski_area_user", schema="public", joinColumns = { 
    //    @JoinColumn(name="user_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
    //    @JoinColumn(name="ski_area_id", nullable=false, updatable=false) })
    public Set<SkiArea> getSkiAreas() {
        return this.skiAreas;
    }
    
    public void setSkiAreas(Set<SkiArea> skiAreas) {
        this.skiAreas = skiAreas;
    }
}


